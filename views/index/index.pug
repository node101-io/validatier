extends ../partials/head
block content 
  .all-main-wrapper#all-main-wrapper
    .inactivity-display-content
    .header-main-wrapper 
      .header-banner-wrapper
        .banner-logo-wrapper(class='center')
          img(src='/res/images/logo.svg', alt='node101' class='center')
        .banner-title-content L'VALIDATIÈR
      .header-network-switch-wrapper
        .network-switch-header#network-switch-header(current_chain_identifier=`${selectedChain.name}` current_chain_symbol=`${selectedChain.symbol}` current_chain_decimals=`${selectedChain.decimals}` current_chain_usd_exhange_rate=`${selectedChain.usd_exchange_rate}`)
          .network-switch-network-image-wrapper 
            img#current-network-img(src=`${selectedChain.image ? selectedChain.image : ''}`)
          .network-switch-network-info-wrapper 
            .network-switch-network-title#current-network-name= selectedChain.pretty_name ? selectedChain.pretty_name : 'Cosmos Hub'
            .network-switch-network-symbol#current-network-symbol= selectedChain.symbol
          .network-switch-drowdown-toggle#network-switch-dropdown-arrow
            include ../icons/chevron.pug
        .network-switch-dropdown#network-switch-dropdown
          .network-switch-search-bar
            .network-switch-search-icon(class='center')
                include ../icons/search.svg
            input.network-switch-input-content(type='text' id='network-switch-input' placeholder='Search')
          each chain in chains 
            .each-chain-wrapper(id=`${chain.chain_id}` chain_id=`${chain.chain_id}` pretty_name=`${chain.pretty_name}` image=`${chain.image}` name=`${chain.name}` symbol=`${chain.symbol}` decimals=`${chain.decimals}` usd_exchange_rate=`${chain.usd_exchange_rate}`)
              .network-switch-network-image-wrapper(class='center')
                img#current-network-img(src=`${chain.image}` style='width: 25px; height: 25px; margin-right: 10px;')
              .network-switch-network-info-wrapper(style='display: flex; align-items: center; flex-direction: row; gap: 10px')
                .network-switch-network-title(style='text-wrap: nowrap')#current-network-name= chain.pretty_name
                .network-switch-network-symbol(style='text-wrap: nowrap')#current-network-symbol= chain.symbol
    .inner-main-wrapper#inner-main-wrapper
      .general-title-description-wrapper
        h2 node101 | Cosmos Validator Timeline
        p node101's journey as a Cosmos validator, detailing key milestones, challenges, and achievements. This timeline highlights their evolution, contributions, and impact within the Cosmos ecosystem.
      .table-main-wrapper
        .table-filters
          .validator-filter-input-wrapper
            .validator-filter-input-content-wrapper 
              .validator-search-icon(class='center')
                include ../icons/search.svg
              input.validator-filter-input(type='text' id='validator-filter-input' placeholder='Search name / operator address')
          .table-filters-subgroup 
            .currency-switch-wrapper
              .each-currency-switch-label #{selectedChain.symbol}
              .switch
                input(type='checkbox' id='currency-toggle' class='switch-checkbox' value=`${currency_type ? currency_type : 'native'}` checked=(currency_type === 'usd'))
                label(for='currency-toggle', class='switch-label')
                  span(class='switch-button')
              .each-currency-switch-label $
            .date-picker
              .selected-range 
                span.date-interval-description 
                  include ../icons/calendar.pug
                  span.date-interval-description-text#header-selected-range-description= specificRangeName ? specificRangeName : 'All time'
                span.date-range
                  span#header-range-bottom-block= selectedDateBottom ? new Date(selectedDateBottom).toLocaleDateString('en-GB') : 'Genesis'
                  span  - 
                  span#header-range-top-block= new Date(selectedDateTop ? selectedDateTop : '').toLocaleDateString('en-GB')
                .dropdown-icon(style='margin-bottom: -6px;')
                  include ../icons/chevron.pug
              .picker-main-wrapper#picker-main-wrapper
                .picker-content-wrapper
                  .left-wrapper
                    .dropdown
                      - 
                        const options = [
                          { id: 'all-time', label: 'All time', selected: true },
                          { id: 'last-week', label: 'Last week' },
                          { id: 'last-7-days', label: 'Last 7 days' },
                          { id: 'last-30-days', label: 'Last 30 days' },
                          { id: 'last-90-days', label: 'Last 90 days' },
                          { id: 'last-365-days', label: 'Last 365 days' },
                          { id: 'this-year', label: 'This year (Jan - Today)' },
                          { id: 'last-calendar-year', label: 'Last calendar year' },
                          { id: 'custom', label: 'Custom' }
                        ]
                      ul
                        each option in options
                          li.left-wrapper-each-choice(class=`${specificRange == option.id ? 'selected' : ''}` id=option.id) #{option.label}

                  .calendar-wrapper
                    .calendar 
                      .date-input(style='display: none')
                        input.each-date-input(type='date' id='periodic-query-bottom-timestamp' value=`${selectedDateBottom ? selectedDateBottom : ''}`)
                        span —
                        input.each-date-input(type='date' id='periodic-query-top-timestamp' value=`${selectedDateTop ? selectedDateTop : ''}`)
                      .date-input-month-year-info-content
                        div.current-month-and-year-display#current-month-and-year-display
                        .each-month-switch-arrow(style='transform: rotateZ(90deg); margin-right: 20px;')#previous-month
                          include ../icons/chevron_dark.pug
                        .each-month-switch-arrow(style='transform: rotateZ(-90deg)')#next-month
                          include ../icons/chevron_dark.pug
                      .days#days-main-wrapper(class='days-header-wrapper')
                        each day in (`${startDay}` == 'sunday' ? ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'] : ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'])
                          span.day= day
                      .month-wrapper
                        .days#month-wrapper
                .buttons
                  div.switch
                    input(type='checkbox' id='calendar-format-toggle' class='switch-checkbox' value=`${startDay ? startDay : 'monday'}` checked=(startDay === 'sunday'))
                    label(for='calendar-format-toggle', class='switch-label')
                      span(class='switch-button')
                  button.cancel#cancel Cancel
                  button.apply#apply Apply
            .export-main-wrapper 
              .export-wrapper-header(class='center' isOpen='false')#export-wrapper-toggle
                include ../icons/export.csv
              .export-wrapper-content
                div(style='display: none')
                  div#export-sort-by ratio
                  div#export-order desc
                  div#export-bottom 24650450
                  div#export-top 24650540
                .each-export-choice(range=0 class='export-choice-selected') All time
                .each-export-choice(range=(7 * 86400 * 1000)) Every 7 days
                .each-export-choice(range=(30 * 86400 * 1000)) Every 30 days
                .each-export-choice(range=(90 * 86400 * 1000)) Every 90 days
                .each-export-choice(range=(365 * 86400 * 1000)) Every year
                button.export-choice-download-button(class='center')#export-choice-download-button
                  include ../icons/download.pug
                  span Download
        .validators-main-wrapper#validators-main-wrapper
          - 
            const headers_array = [
              {name: 'Self stake', id: 'self_stake'}, 
              {name: 'Withdraw', id: 'withdraw'}, 
              {name: 'Ratio', id: 'ratio', popup_text: 'Self stake / Withdraw'}, 
              {name: 'Sold', id: 'sold', popup_text: 'Withdraw - Self stake'}, 
            ]
          .validator-table-header
            .each-table-header-wrapper(class='each-table-header-validator-info-header')
              .each-table-header-title Validators
            each header in headers_array
              .each-table-header-wrapper
                .each-table-header-wrapper-popup-content
                .each-table-header-wrapper(id=`${header.id}`)
                  .each-table-header-title
                    if header.popup_text
                      .each-table-popup-wrapper
                        .each-table-popup-info-content(class='center')= header.popup_text
                        .each-tooltip-info-hover(style='margin-bottom: -1px')
                          img(src='/res/images/info.svg')
                    div= header.name
                  .each-table-header-sort-indicators 
                    .triangle-up
                    .triangle-down
          each validator, index in validators
            .each-validator-wrapper(id=`${validator.operator_address}`)
              .each-validator-info-wrapper
                .ranking-number-content= index + 1
                .validator-image
                  img.validator-image-content(src=`${validator.temporary_image_uri ? validator.temporary_image_uri : '/res/images/default_validator_photo.png'}`)
                .validator-textual-info-wrapper 
                  .validator-moniker 
                    .validator-moniker-text-content 
                      span.validator-moniker-text #{validator.moniker}
                    if validator.inactivityIntervals && validator.inactivityIntervals.length > 0
                      .validator-inactivity-display(class='center' value=`${validator.inactivityIntervals}`)
                        img(src='/res/images/warning.svg')
                    a.validator-action-button(href=`https://wallet.keplr.app/chains/${validator.chain_identifier}?modal=validator&chain=${validator.chain_id}&validator_address=${validator.operator_address}` target='_blank') Stake
                    .validator-action-button(class='validator-plot-graph-button' operator-address=`${validator.operator_address}`) Plot
                  .validator-operator-address
                    .validator-operator-address-content(operator_address=`${validator.operator_address}`)
                      div= validator.operator_address.slice(0,4)
                      .hidden-part
                        span.middle-address= validator.operator_address.slice(4, (validator.operator_address.length - 4) / 2)
                        span.dots ....
                        span.middle-address= validator.operator_address.slice((validator.operator_address.length - 4) / 2, validator.operator_address.length - 4)
                      div= validator.operator_address.slice(validator.operator_address.length - 4, validator.operator_address.length)
                      .validator-operator-address-copy-button
                        img(src='/res/images/clipboard.svg')
              -
                function shortNumberFormat(num) {
                  const sign = num < 0 ? '-' : '';
                  num = Math.abs(num);
                  if (num >= 1_000_000) return sign + (num / 1_000_000).toFixed(1) + 'M';
                  if (num >= 10_000) return sign + Math.floor(num / 1_000) + 'K';

                  if (num >= 1_000) return sign + num.toFixed(0).toString();
                  if (num >= 100) return sign + num.toFixed(1).toString();
                  if (num >= 0) return sign + num.toFixed(2).toString();

                  return sign + num.toString();
                }
              - 
                function getValue(value, currency) {
                  const decimals = selectedChain ? selectedChain.decimals : 6;
                  const exchangeRate = selectedChain ? selectedChain.usd_exchange_rate : 0;
                  if (currency.toLowerCase().trim() != 'usd') return `${shortNumberFormat(value / (10 ** decimals))} ${currency}`
                  return `${shortNumberFormat((value / (10 ** decimals)) * exchangeRate)} $`
                }
              div.validator-each-numeric-info(native=`${getValue(validator.self_stake, selectedChain.symbol)}` usd=`${getValue(validator.self_stake, 'usd')}`)= currency_type == 'native' ? getValue(validator.self_stake, selectedChain.symbol) : getValue(validator.self_stake, 'usd')
              div.validator-each-numeric-info(native=`${getValue(validator.withdraw, selectedChain.symbol)}` usd=`${getValue(validator.withdraw, 'usd')}`)= currency_type == 'native' ? getValue(validator.withdraw, selectedChain.symbol) : getValue(validator.withdraw, 'usd')
              div.validator-each-numeric-info(class='validator-ratio')= shortNumberFormat(validator.ratio)
              div.validator-each-numeric-info(native=`${getValue(validator.sold, selectedChain.symbol)}` usd=`${getValue(validator.sold, 'usd')}`)= currency_type == 'native' ? getValue(validator.sold, selectedChain.symbol) : getValue(validator.sold, 'usd')
            .each-validator-wrapper-seperator-line
    .footer-main-wrapper(class='center')
      .footer-main-title Connect us 
      .footer-socials-wrapper(class='center')
        a(href='https://t.me/node101', target='_blank').each-social-icon 
          img(src="/res/images/telegram.svg" alt='node_101_telegram')
        a(href='https://x.com/node_101' target='_blank').each-social-icon 
          img(src="/res/images/x.svg" alt='node_101_x_twitter')
        a(href='https://github.com/node101-io' target='_blank').each-social-icon 
          img(src="/res/images/github.svg" alt='node_101_github')
        a(href='https://www.linkedin.com/company/node101/' target='_blank').each-social-icon 
          img(src="/res/images/linkedin.svg" alt='node_101_linkedin')
